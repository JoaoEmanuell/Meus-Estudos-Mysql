create database nome; = cria um banco de dados

=================================================

use nome = Faz com que ele utilize o banco de dados com o nome

=================================================

create table nome ();

=================================================

default CHARSET utf8mb4_general_ci = define o charset padrão como utf8 default collate 

=================================================

collate utf8mb4_general_ci = define os caracteres padrões como sendo utf9

=================================================

date = data

=================================================

enum('p') = enum é uma coleção, você coloca enum e no lugar do P coloca 
o paramentro do nome, depois da , entre () você pode colocar outro 
paramentro

=================================================

decimal = decimal define um numero decimal, pode se passar o paramentro 
para limitar o numero de caracteres antes e depois da , usando :

	decimal(nt,dv)

	sendo nt = numeros totais e
	
	dv = numeros depois da virgula
	
	Sendo assim ele só ira aceitar a quantidade de total de nt, sem 
	aceitar mais do que eles mas com a possibilidade de aceitar 
	menos. 
	Dessa forma economizando espaço no banco de dados

=================================================

Primary key (k) = Define a chave primaria como sendo o elemento 
informado em k

=================================================

CONSTANTS:

    NOT NULL = não pode ser em branco
	
	DEFAULT = caso o dado não seja informado será considerado como o 
	paramentro após a ''
	
	AUTO_INCREMENT = Auto incrementa um campo

=================================================

INSERIR DADOS NA TABELA:

	insert into nome_da_tabela
	(registro, registro1)
	values
	('Dado', 'Dado1');

	Ou

	INSERT INTO nome_da_tabela VALUES
	('Dado', 'Dado1');

INSERIR VARIOS DADOS:

	insert into tabela
	(campo, campo1)
	values
	('dados', 'dados2'),
	('dados', 'dados2');

Ou de forma simplificada:

	insert into tabela values:
	('Dado1', 'Dado2'),
	('Dado1', 'Dado2');

=================================================

ALTER TABLE tabela = altera a estrutura da tabela, ele por sua vez tem 
que ser complementado com alguns comandos:

	ADD COLUMN nome tipo_primitivo = Cria uma coluna (no mysql os 
	campos são chamados de colunas) com o nome e o tipo primitivo, 
	por padrão a coluna será criada no fim da tabela.
	
	DROP COLUMN nome = Apaga uma coluna.

	ADD COLUMN nome tipo_primitivo AFTER nome = Cria uma coluna, com 
	o nome, tipo primitivo e apos a coluna informado no nome final. 

	ADD COLUMN nome tipo_primitivo FIRST = Cria uma coluna, com o 
	nome, tipo primitivo e sendo a primeira coluna da tabela.

	MODIFY COLUMN nome novo_tipo_primitivo = Altera o tipo primitivo 
	mas também pode alterar a constrang da coluna da coluna 
	desejada.
	
	CHANGE COLUMN nome_coluna_antiga nome_nova_coluna tipo primtivo 
	= altera o nome da coluna, se ela tiver constrangs ou defaults 
	eles serão perdidos, mas se você colocar eles apos o tipo 
	primitivo, eles serão mantidos.

	RENAME TO nome = Renomeia a tabela inteira

	ADD PRIMARY KEY(campo) = O campo que foi dito se torna uma chave 
	primaria

DESC tabela = Descreve a estrutura da tabela.

CREATE TABLE IF NOT EXISTS nome () = Cria uma tabela se ela não existir

DROP TABLE IF EXISTS nome = Apaga a tabela com o nome informado

=================================================

MODIFICAR UMA LINHA DA TABELA:

	UPDATE tabela
	SET campo = 'Dado'
	WHERE primary_key = 'key';

MODIFICAR VARIAS LINHAS DA TABELA:

	UPDATE tabela
	SET campo = 'dado', campo = 'dado'
	WHERE primary_key = 'key'
	LIMIT 1;

esse LIMIT serve para definir quantas linhas serão afetadas, evitando 
que você modifique varias linhas.

REMOVER LINHAS:

	UMA LINHA:

		DELETE FROM tabela
		WHERE primary_key = 'key';

	TODAS AS LINHAS:

		TRUNCATE TABLE tabela;

		ou

		TRUNCATE tabela;
=================================================